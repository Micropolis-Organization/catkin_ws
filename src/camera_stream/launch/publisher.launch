<launch>
	<arg name="visualize" default="true" />
	<arg name="width" default="0" />
	<arg name="height" default="0" />
	<arg name="fps" default="30" />
	<!-- <arg name="source" default="/home/ahmad/Downloads/videoplayback.mp4" /> -->
	<arg name="source" default="5"/>
	<!-- launch video stream -->
	<include file="$(find video_stream_opencv)/launch/camera.launch">
		<!-- node name and ros graph name -->
		<arg name="camera_name" value="camera" />
		<!-- means video device 0, /dev/video0 -->
		<arg name="video_stream_provider" value="$(arg source)" />
		<!-- set camera fps to (if the device allows) -->
		<arg name="set_camera_fps" value="$(arg fps)" />
		<!-- set buffer queue size of frame capturing to -->
		<arg name="buffer_queue_size" value="100" />
		<!-- throttling the querying of frames to -->
		<arg name="fps" value="$(arg fps)" />
		<!-- setting frame_id -->
		<arg name="frame_id" value="camera" />
		<!--
		camera info loading, take care as it needs the "file:///" at the start , e.g.:
		"file:///$(find your_camera_package)/config/your_camera.yaml"
		-->
		<arg name="camera_info_url" value="" />
		<!-- flip the image horizontally (mirror it) -->
		<arg name="flip_horizontal" value="true" />
		<!-- flip the image vertically -->
		<arg name="flip_vertical" value="false" />
		<!-- visualize on an image_view window the stream generated -->
		<arg name="width" value="$(arg width)" />
		<arg name="height" value="$(arg height)" />
		<arg name="visualize" value="$(arg visualize)" />
	</include>
	
	<node pkg="camera_stream" type="depth_estimation_subscriber.py" name="depth_estimation_subscriber" output="screen" />
	<node pkg="camera_stream" type="throttle_controller.py" name="throttle_controller" output="screen" />
	
</launch>
